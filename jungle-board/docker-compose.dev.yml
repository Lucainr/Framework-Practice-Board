version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: jungle-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-jungle}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_NAME:-jungle_board}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata-dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-jungle}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.api.dev
    container_name: jungle-backend-dev
    command: pnpm --filter backend start:dev
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.web.dev
    container_name: jungle-frontend-dev
    command: pnpm --filter frontend dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/frontend/.next
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}

volumes:
  pgdata-dev:
